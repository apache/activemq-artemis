<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Point-to-Point" enabled="true">
        <longProp name="ThreadGroup.start_time">1115386407000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1115386407000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSConfigGui" testclass="JMSSampler" testname="Echo Sampler" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="brokerURL" elementType="Argument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">tcp://localhost:61616</stringProp>
                <stringProp name="Argument.name">brokerURL</stringProp>
              </elementProp>
              <elementProp name="queue.MyQueue" elementType="Argument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">example.MyQueue</stringProp>
                <stringProp name="Argument.name">queue.MyQueue</stringProp>
              </elementProp>
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">example.Q.REQ</stringProp>
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
              </elementProp>
              <elementProp name="queue.Q.RPL" elementType="Argument">
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">example.Q.RPL</stringProp>
                <stringProp name="Argument.name">queue.Q.RPL</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="JMSSampler.isFireAndForget">false</boolProp>
          <stringProp name="JMSSampler.ReceiveQueue">Q.RPL</stringProp>
          <stringProp name="JMSSampler.timeout">5000</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl"></stringProp>
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;msg&gt;test&lt;/msg&gt;</stringProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
        </JMSSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
