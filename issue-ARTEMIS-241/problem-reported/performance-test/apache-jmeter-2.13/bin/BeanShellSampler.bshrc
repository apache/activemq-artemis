// Sample BeanShell Sampler initialisation file
// To enable, define the JMeter property: 
// beanshell.sampler.init=BeanShellSampler.bshrc

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

//print("Initialisation started");

import org.apache.jmeter.util.JMeterUtils;

i = j = k = 0; // for counters

getprop(p){// get a JMeter property
	return JMeterUtils.getPropDefault(p,"");
}

getprop(p,d){// get a JMeter property with default
	return JMeterUtils.getPropDefault(p,d);
}

setprop(p,v){// set a JMeter property
	JMeterUtils.setProperty(p, v);
}

// Define routines to stop the test or a thread
stopEngine(){// Stop the JMeter test
	org.apache.jmeter.engine.StandardJMeterEngine.stopEngine();
}

stopThread(t){// Stop a JMeter thread
	org.apache.jmeter.engine.StandardJMeterEngine.stopThread(t);
}

String getVariables(){ // Create a listing of the thread variables
    StringBuffer sb = new StringBuffer(100);
    Iterator i = vars.getIterator();
    while(i.hasNext())
    {
      Map.Entry me = i.next();
       if(String.class.equals(me.getValue().getClass())){
             sb.append(me.toString()).append("\n");
       }
    }
    return sb.toString();
}

// Interruptible interface

interrupt() {
    print("Interrupt detected");
}

//print("Initialisation complete");
