<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements. See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.apache.activemq.tests</groupId>
      <artifactId>artemis-tests-pom</artifactId>
      <version>2.29.0-SNAPSHOT</version>
   </parent>

   <artifactId>soak-tests</artifactId>
   <packaging>jar</packaging>
   <name>ActiveMQ Artemis soak Tests</name>

   <properties>
      <activemq.basedir>${project.basedir}/../..</activemq.basedir>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.apache.activemq</groupId>
         <artifactId>artemis-core-client</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <!-- logging -->
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j-impl</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.activemq</groupId>
         <artifactId>artemis-server</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.activemq.tests</groupId>
         <artifactId>integration-tests</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
         <type>test-jar</type>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.activemq</groupId>
         <artifactId>artemis-commons</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.activemq.tests</groupId>
         <artifactId>artemis-test-support</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.activemq</groupId>
         <artifactId>artemis-unit-test-support</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>jakarta.transaction</groupId>
         <artifactId>jakarta.transaction-api</artifactId>
         <scope>test</scope>
      </dependency>

      <!-- The johnzon-core and json-api contents are repackaged in -commons,
           However maven can still need them during tests, which run against
           the original -commons classes when built+run in the same reactor,
           and not the jar containing the shaded bits. -->
      <dependency>
         <groupId>org.apache.johnzon</groupId>
         <artifactId>johnzon-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>jakarta.json</groupId>
         <artifactId>jakarta.json-api</artifactId>
         <scope>test</scope>
      </dependency>

   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-maven-plugin</artifactId>
            <version>${project.version}</version>
            <executions>
               <execution>
                  <phase>test-compile</phase>
                  <id>create-horizontal-paging</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>admin</user>
                     <password>admin</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/horizontalPaging</instance>
                     <configuration>${basedir}/target/classes/servers/horizontalPaging</configuration>
                     <args>
                        <arg>--java-memory</arg>
                        <arg>10G</arg>
                     </args>
                  </configuration>
               </execution>
               <execution>
                  <phase>test-compile</phase>
                  <id>create-flow-paging</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>admin</user>
                     <password>admin</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/flowControlPaging</instance>
                     <configuration>${basedir}/target/classes/servers/flowControlPaging</configuration>
                     <args>
                        <arg>--java-memory</arg>
                        <!-- some limited memory to make it more likely to fail -->
                        <arg>512M</arg>
                     </args>
                  </configuration>
               </execution>
               <execution>
                  <phase>test-compile</phase>
                  <id>create-subscription-paging</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>admin</user>
                     <password>admin</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/subscriptionPaging</instance>
                     <configuration>${basedir}/target/classes/servers/subscriptionPaging</configuration>
                     <args>
                        <arg>--java-memory</arg>
                        <!-- some limited memory to make it more likely to fail -->
                        <arg>512M</arg>
                     </args>
                  </configuration>
               </execution>
               <execution>
                  <phase>test-compile</phase>
                  <id>create-mmfactory</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <!-- this makes it easier in certain envs -->
                     <configuration>${basedir}/target/classes/servers/mmfactory</configuration>
                     <allowAnonymous>true</allowAnonymous>
                     <user>admin</user>
                     <password>admin</password>
                     <instance>${basedir}/target/mmfactory</instance>
                     <noWeb>false</noWeb>
                     <args>
                        <arg>--java-options</arg>
                        <arg>-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote=true
                           -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.rmi.port=11098
                           -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false
                        </arg>
                     </args>
                  </configuration>
               </execution>
               <execution>
                  <phase>test-compile</phase>
                  <id>create-openwire-leaktest</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>admin</user>
                     <password>admin</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/openwire-leaktest</instance>
                     <configuration>${basedir}/target/classes/servers/openwire-leaktest</configuration>
                     <args>
                        <arg>--java-memory</arg>
                        <arg>3G</arg>
                     </args>
                  </configuration>
               </execution>
               <!-- Used on TestRetention -->
               <execution>
                  <phase>test-compile</phase>
                  <id>create-lmreplay</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>artemis</user>
                     <password>artemis</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/replay/large-message</instance>
                     <configuration>${basedir}/target/classes/servers/replay/large-message</configuration>
                     <args>
                        <!-- this is needed to run the server remotely -->
                        <arg>--java-options</arg>
                        <arg>-Djava.rmi.server.hostname=localhost</arg>
                        <arg>--journal-retention</arg>
                        <arg>1</arg>
                        <arg>--queues</arg>
                        <arg>RetentionTest</arg>
                        <arg>--name</arg>
                        <arg>large-message</arg>
                     </args>
                  </configuration>
               </execution>
               <!-- Used on LargeMessageInterruptTest -->
               <execution>
                  <phase>test-compile</phase>
                  <id>create-interruptlm</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>artemis</user>
                     <password>artemis</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/interruptlm</instance>
                     <configuration>${basedir}/target/classes/servers/interruptlm</configuration>
                     <args>
                        <arg>--java-options</arg>
                        <arg>-Djava.rmi.server.hostname=localhost</arg>
                        <arg>--queues</arg>
                        <arg>LargeMessageInterruptTest</arg>
                        <arg>--name</arg>
                        <arg>interruptlm</arg>
                     </args>
                  </configuration>
               </execution>

               <!-- Used on ClusteredLargeMessageInterruptTest -->
               <execution>
                  <phase>test-compile</phase>
                  <id>create-lmbroker1</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>artemis</user>
                     <password>artemis</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/lmbroker1</instance>
                     <configuration>${basedir}/target/classes/servers/lmbroker1</configuration>
                     <args>
                        <arg>--java-options</arg>
                        <arg>-Djava.rmi.server.hostname=localhost</arg>
                        <arg>--clustered</arg>
                        <arg>--staticCluster</arg>
                        <arg>tcp://localhost:61716</arg>
                        <arg>--java-options</arg>
                        <arg>-Djava.rmi.server.hostname=localhost</arg>
                        <arg>--queues</arg>
                        <arg>ClusteredLargeMessageInterruptTest</arg>
                        <arg>--name</arg>
                        <arg>lmbroker1</arg>
                     </args>
                  </configuration>
               </execution>
               <execution>
                  <phase>test-compile</phase>
                  <id>create-lmbroker2</id>
                  <goals>
                     <goal>create</goal>
                  </goals>
                  <configuration>
                     <role>amq</role>
                     <user>artemis</user>
                     <password>artemis</password>
                     <allowAnonymous>true</allowAnonymous>
                     <noWeb>false</noWeb>
                     <instance>${basedir}/target/lmbroker2</instance>
                     <configuration>${basedir}/target/classes/servers/lmbroker2</configuration>
                     <portOffset>100</portOffset>
                     <args>
                        <arg>--java-options</arg>
                        <arg>-Djava.rmi.server.hostname=localhost</arg>
                        <arg>--clustered</arg>
                        <arg>--staticCluster</arg>
                        <arg>tcp://localhost:61616</arg>
                        <arg>--java-options</arg>
                        <arg>-Djava.rmi.server.hostname=localhost</arg>
                        <arg>--queues</arg>
                        <arg>ClusteredLargeMessageInterruptTest</arg>
                        <arg>--name</arg>
                        <arg>lmbroker2</arg>
                     </args>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <skipTests>${skipSoakTests}</skipTests>
               <includes>
                  <include>**/*Test.java</include>
               </includes>
               <argLine>${activemq-surefire-argline}</argLine>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
